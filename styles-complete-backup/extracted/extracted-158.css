/* Extracted CSS Block 158 */
/* Size: 957 chars */

),
                lt.colorSpace = lt.encoding === Ol ? jo : Oo),
                this.texture = new f_(ft,lt.mapping,lt.wrapS,lt.wrapT,lt.magFilter,lt.minFilter,lt.format,lt.type,lt.anisotropy,lt.colorSpace),
                this.texture.isRenderTargetTexture = !0,
                this.texture.generateMipmaps = lt.generateMipmaps !== void 0 && lt.generateMipmaps,
                this.texture.minFilter = lt.minFilter !== void 0 ? lt.minFilter : Rn
            }
            fromEquirectangularTexture(tt, lt) {
                this.texture.type = lt.type,
                this.texture.colorSpace = lt.colorSpace,
                this.texture.generateMipmaps = lt.generateMipmaps,
                this.texture.minFilter = lt.minFilter,
                this.texture.magFilter = lt.magFilter;
                const mt = {
                    tEquirect: {
                        value: null
                    }
                }
                  , ft = 
