/* Extracted CSS Block 230 */
/* Size: 1267 chars */


            }
        }
        class Pm extends Ho {
            constructor(tt=null, lt=1, mt=1, ft, xt, Ct, Mt, Lt, Nt=fn, jt=fn, Wt, Qt) {
                super(null, Ct, Mt, Lt, Nt, jt, ft, xt, Wt, Qt),
                this.isDataTexture = !0,
                this.image = {
                    data: tt,
                    width: lt,
                    height: mt
                },
                this.generateMipmaps = !1,
                this.flipY = !1,
                this.unpackAlignment = 1
            }
        }
        const Lx = new no
          , oS = new no;
        class Lv {
            constructor(tt=[], lt=[]) {
                this.uuid = Ms(),
                this.bones = tt.slice(0),
                this.boneInverses = lt,
                this.boneMatrices = null,
                this.boneTexture = null,
                this.boneTextureSize = 0,
                this.init()
            }
            init() {
                const tt = this.bones
                  , lt = this.boneInverses;
                if (this.boneMatrices = new Float32Array(16 * tt.length),
                lt.length === 0)
                    this.calculateInverses();
                else if (tt.length !== lt.length) {
                    console.warn(
