/* Extracted CSS Block 248 */
/* Size: 1229 chars */


                  , Ct = tt.fps || 30
                  , Mt = tt.blendMode;
                let Lt = tt.length || -1;
                const Nt = tt.hierarchy || [];
                for (let jt = 0; jt < Nt.length; jt++) {
                    const Wt = Nt[jt].keys;
                    if (Wt && Wt.length !== 0)
                        if (Wt[0].morphTargets) {
                            const Qt = {};
                            let qt;
                            for (qt = 0; qt < Wt.length; qt++)
                                if (Wt[qt].morphTargets)
                                    for (let Xt = 0; Xt < Wt[qt].morphTargets.length; Xt++)
                                        Qt[Wt[qt].morphTargets[Xt]] = -1;
                            for (const Xt in Qt) {
                                const Zt = []
                                  , Yt = [];
                                for (let sr = 0; sr !== Wt[qt].morphTargets.length; ++sr) {
                                    const er = Wt[qt];
                                    Zt.push(er.time),
                                    Yt.push(er.morphTarget === Xt ? 1 : 0)
                                }
                                ft.push(new D_(
