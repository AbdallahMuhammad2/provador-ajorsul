/* Extracted CSS Block 313 */
/* Size: 993 chars */

, d)
    }
    setSize(d, o, c=!1) {
        !c && (d ? Math.abs(d - this._renderSize.width) : 0) + (o ? Math.abs(o - this._renderSize.height) : 0) < .1 || (d && (this._renderSize.width = d),
        o && (this._renderSize.height = o),
        this.rendererObject.xr.enabled && this.rendererObject.xr.isPresenting || (this._renderer.setSize(this._renderSize.width, this._renderSize.height, !1),
        this._renderer.setPixelRatio(this._displayCanvasScaling)),
        this._composer.setPixelRatio(this._displayCanvasScaling, !1),
        this._composer.setSize(this._renderSize.width, this._renderSize.height),
        this._trackedTargets.forEach(h => {
            const _ = h
              , b = _.sizeMultiplier;
            if (b) {
                const _e = this._renderSize.clone().multiplyScalar(this._displayCanvasScaling * b);
                _.setSize(Math.floor(_e.width), Math.floor(_e.height))
            }
        }
        ),
        this.dispatchEvent({
            type: 
